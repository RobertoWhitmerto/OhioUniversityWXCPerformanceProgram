doctype html
html
  head
    title OU WxC - My Workouts
    // Compiled and minified CSS
    link(rel='stylesheet', href='https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.8/css/materialize.min.css')
    // Compiled and minified JavaScript
    script(src='https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.8/js/materialize.min.js')
    // Bootstrap
    link(rel='stylesheet', href='https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css')
    script(src='https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js')
    script(src='https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js')
    // Let browser know website is optimized for mobile
    meta(name='viewport', content='width=device-width, initial-scale=1.0')
    // Import Google Icon Font
    link(href='http://fonts.googleapis.com/icon?family=Material+Icons', rel='stylesheet')
    // Import materialize.css
    link(type='text/css', rel='stylesheet', href='css/materialize.min.css', media='screen,projection')
    // Let browser know website is optimized for mobile
    meta(name='viewport', content='width=device-width, initial-scale=1.0')
    script(src='https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js')
    // Load the AJAX API
    script(type='text/javascript', src='https://www.gstatic.com/charts/loader.js')
    script(type='text/javascript').
      // Load the Visualization API and the corechart package.
      google.charts.load('current', {'packages':['corechart']});
      // Set a callback to run when the Google Visualization API is loaded [A].
      google.charts.setOnLoadCallback(sleepy);
      google.charts.setOnLoadCallback(dist);
      google.charts.setOnLoadCallback(pace);
      google.charts.setOnLoadCallback(rtime);
      //Identifying Functions [B]
      function sleepy() {
      // Create the data table.
      var data = new google.visualization.DataTable();
      data.addColumn('string', 'day');
      data.addColumn('number', 'hours');
      var oneWeekAgo = new Date();
      oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);
      console.log(oneWeekAgo);
      var d = !{data_w};
      var rows = [['Sun.',18],['Mon.',18],['Tues.',18],['Wed.',18],['Th.',18],['Fri.',18],['Sat.',18]];
      console.log(JSON.stringify(d));
      for(var i = 0; i < d.length; i++) {
          var obj = d[i];
          var dt = new Date(Date.parse(obj.date));
          if(dt > oneWeekAgo){
            console.log(dt.getDay());
            rows[dt.getDay()][1] = parseInt(obj.sleep, 10);
          }
      }
      console.log(rows);
      data.addRows(rows);
      // Set chart options
      var options = {'title':'Weekly Sleep Pattern',
      'width':450,
      'height':150,
      legend: 'none',
      curveType: 'function',
      backgroundColor: '#ffffff',
      vAxis: {
      title: "Hours of Sleep",
      viewWindowMode:'explicit'
      },
      colors: ['#00d8ff'],
      };
      // Instantiate and draw our chart, passing in some options.
      var chart = new google.visualization.LineChart(document.getElementById('sleepchart'));
      chart.draw(data, options);
      }
      function dist() {
      // Create the data table.
      var data = new google.visualization.DataTable();
      data.addColumn('string', 'day');
      data.addColumn('number', 'Distance (miles)');
      var oneWeekAgo = new Date();
      oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);
      console.log(oneWeekAgo);
      var d = !{data_w};
      var rows = [['Sun.',0],['Mon.',0],['Tues.',0],['Wed.',0],['Th.',0],['Fri.',0],['Sat.',0]];
      console.log(JSON.stringify(d));
      for(var i = 0; i < d.length; i++) {
          var obj = d[i];
          var dt = new Date(Date.parse(obj.date));
          if(dt > oneWeekAgo){
            console.log(dt.getDay());
            rows[dt.getDay()][1] = parseInt(obj.distance, 10);
          }
      }
      console.log(rows);
      data.addRows(rows);
      // Set chart options
      var options = {'title':'Distance Ran',
      'width':450,
      'height':150,
      vAxis: {
      title: "Distance",
      viewWindowMode:'explicit'
      },
      legend: 'none',
      lineWidth: 3,
      colors: ['#c41616'],
      backgroundColor: '#ffffff'
      };
      // Instantiate and draw our chart, passing in some options.
      var chart2 = new google.visualization.LineChart(document.getElementById('distancechart'));
      chart2.draw(data, options);
      }
      function pace() {
      // Create the data table.
      var data = new google.visualization.DataTable();
      data.addColumn('string', 'day');
      data.addColumn('number', 'Distance (miles)');
      var oneWeekAgo = new Date();
      oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);
      console.log(oneWeekAgo);
      var d = !{data_w};
      var rows = [['Sun.',0.0],['Mon.',0.0],['Tues.',0.0],['Wed.',0.0],['Th.',0.0],['Fri.',0.0],['Sat.',0.0]];
      console.log(JSON.stringify(d));
      for(var i = 0; i < d.length; i++) {
          var obj = d[i];
          var dt = new Date(Date.parse(obj.date));
          if(dt > oneWeekAgo){
            console.log(dt.getDay());
            rows[dt.getDay()][1] = parseFloat(obj.time, 10)/parseInt(obj.distance, 10);
          }
      }
      console.log(rows);
      data.addRows(rows);
      // Set chart options
      var options = {'title':'Pace',
      'width':450,
      'height':150,
      vAxis: {
      title: "Pace",
      viewWindowMode:'explicit'
      },
      legend: 'none',
      lineWidth: 3,
      colors: ['#c41616'],
      backgroundColor: '#ffffff'
      };
      // Instantiate and draw our chart, passing in some options.
      var chart = new google.visualization.ColumnChart(document.getElementById('pacechart'));
      chart.draw(data, options);
      }
      function rtime() {
      // Create the data table.
      var data = new google.visualization.DataTable();
      data.addColumn('string', 'day');
      data.addColumn('number', 'hours');
      var oneWeekAgo = new Date();
      oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);
      console.log(oneWeekAgo);
      var d = !{data_w};
      var rows = [['Sun.',18],['Mon.',18],['Tues.',18],['Wed.',18],['Th.',18],['Fri.',18],['Sat.',18]];
      console.log(JSON.stringify(d));
      for(var i = 0; i < d.length; i++) {
          var obj = d[i];
          var dt = new Date(Date.parse(obj.date));
          if(dt > oneWeekAgo){
            console.log(dt.getDay());
            rows[dt.getDay()][1] = parseInt(obj.RPE, 10)*parseInt(obj.time, 10);
          }
      }
      console.log(rows);
      data.addRows(rows);
      // Set chart options
      var options = {'title':'Training Load',
      'width':700,
      'height':200,
      legend: 'none',
      curveType: 'function',
      backgroundColor: '#ffffff',
      vAxis: {
      title: "RPE x Time",
      viewWindowMode:'explicit'
      },
      colors: ['#00d8ff'],
      };
      // Instantiate and draw our chart, passing in some options.
      var chart = new google.visualization.LineChart(document.getElementById('rpextimechart'));
      chart.draw(data, options);
      }
    script.
      $(document).ready(function(){
      $(".dropdown-button").dropdown();
      $(".button-collapse").sideNav();
      });
  body(background='/views/bg3.jpg')
    // Navbar up at the top
    nav
      .nav-wrapper.light-blue.darken-4
        a.brand-logo
          font(color='cyan') OU WxC
        a.button-collapse(href='#', data-activates='mobile-demo')
          i.material-icons menu
        ul.right.hide-on-med-and-down
          li
            a.dropdown-button.light-blue(href='/home') Home
          li
            a.dropdown-button.light-blue.lighten-1(href='/about') About
          li
            a.dropdown-button.green.lighten-1(href='#', data-activates='Athletes')
              | Athletes
              i.material-icons.right arrow_drop_down
          li
            a.dropdown-button.blue.lighten-1(href='#', data-activates='CoachesTrainers')
              | Coaches/Trainers
              i.material-icons.right arrow_drop_down
          li
            a.dropdown-button.red.lighten-1(href='#', data-activates='Administrators')
              | Administrators
              i.material-icons.right arrow_drop_down
          li
            a.waves-effect.waves-light.btn-large.orange(href='/logout') Log-out
      // Drop down associations Non-Mobile
      ul#Athletes.dropdown-content
        li
          a(href='/workoutentry') Enter a workout
        li.divider
        li
          a(href='/myworkouts') View past workouts
      ul#CoachesTrainers.dropdown-content
        li
          a(href='#!') View Athletes
      ul#Administrators.dropdown-content
        li
          a(href='/datadumpindividual') CSV Data Dump (Individual)
        li.divider
        li
          a(href='/datadumpteam') CSV Data Dump (Team)
        li.divider
        li
          a(href='/admin_add_user') Add a user
        li.divider
        li
          a(href='/admin_remove_user') Remove a user
      // Hambug Menu Options
      ul#mobile-demo.side-nav.amber.lighten-5
        li
          font(color='green')
            h5 Athletes
        li.divider
        li
          a.waves-effect.waves-light.btn.green.darken-3(href='/workoutentry') Enter a Workout
        li.divider
        li
          a.waves-effect.waves-light.btn.green.darken-3(href='/myworkouts') View Past Workouts
        li.divider
        li
          font(color='blue')
            h5 Trainers
        li.divider
        li
          a.waves-effect.waves-light.btn-large.blue.darken-3(href='#') View Athletes
        li.divider
        li
          font(color='red')
            h5 Administrators
        li.divider
        li
          a.waves-effect.waves-light.btn.red.darken-3(href='/datadumpindividual') CSV Data Dump (Individual)
        li
          a.waves-effect.waves-light.btn.red.darken-3(href='/datadumpteam') CSV Data Dump (Team)
        li.divider
        li
          a.waves-effect.waves-light.btn.red.darken-3(href='/admin_add_user') Add a User
        li.divider
        li
          a.waves-effect.waves-light.btn.red.darken-3(href='/admin_remove_user') Remove a User
        li.divider
        li
          br
        li.divider
        li
          a.waves-effect.waves-light.btn.blue-grey.darken-3(href='/about') About
        li.divider
        li
          a.waves-effect.waves-light.btn-large.orange(href='/logout') Log-out
        li.divider
        li
          font(color='grey')
            h6
              center Team on a Cob 2016
    br
    hr
    style(type='text/css').
      div.ez{
      background: #01579b;
      width:900px;
      border: 3px solid #82b1ff;
      margin: auto;
      }
    style(type='text/css').
      div.ez2{
      background: #304ffe;
      width:900px;
      border: 3px solid #82b1ff;
      margin: auto;
      }
    style.
      .table {
      border: 3.5px solid #03a9f4;
      border-radius: 5px;
      }
      .table-bordered > thead > tr > th,
      .table-bordered > tbody > tr > th,
      .table-bordered > tfoot > tr > th,
      .table-bordered > thead > tr > td,
      .table-bordered > tbody > tr > td,
      .table-bordered > tfoot > tr > td {
      border: 3px solid #03a9f4;
      border-radius: 5px;
      }
      h1{
      color:white;
      }
      td{
      color:#18ffff;
      }
      th{
      color:white;
      }
    .ez
      font(color='cyan')
        center
          h1
            b My Workouts:
          br
          table.table.table-bordered
            thead
              tr
                th Date
                th Hours Slept
                th Health Status
                th Illness
                th Injury
                th Percent Health
                th Cycle
                th RPE
                th Time
                th Distance
                th Notes
                th
            tbody
              for workout in data
                tr
                  form(action='/myworkouts', method='post')
                    input(type='hidden', value=workout['workout_id'], name='wID', required='')
                    td= workout['date']
                    td= workout['sleep']
                    td= workout['health_status']
                    td= workout['Illness']
                    td= workout['Injury']
                    td= workout['percent_health']
                    td= workout['cycle_start']
                    td= workout['RPE']
                    td= workout['time']
                    td= workout['distance']
                    td= workout['notes']
                    td
                      center
                        a.waves-effect.waves-light.btn.cyan(href='/myworkouts')
                          font(color='white') Edit
                        button.btn.waves-effect.waves-light.red.lighten-1(type='submit', name='action', wID=workout['workout_id'])
                          | Remove
                          i.material-icons.right send
    br
    br
    br
    hr
    center
      .ez
        font(color='cyan')
          p.fonts
          h1
            b Weekly Charts:
          p
    // Div that will hold the pie chart [C]
    .ez2
      br
      a.btn.btn-info.green(href='#demo1', data-toggle='collapse') Sleep
      br
      br
      #demo1.collapse
        #sleepchart
        br
      a.btn.btn-info.green(href='#demo2', data-toggle='collapse') Distance
      br
      br
      #demo2.collapse
        #distancechart
      a.btn.btn-info.green(href='#demo3', data-toggle='collapse') Pace
      br
      br
      #demo3.collapse
        #pacechart
        br
      a.btn.btn-info.green(href='#demo5', data-toggle='collapse') Training Load
      br
      br
      #demo5.collapse
        #rpextimechart
      br
      br
    br
    hr
    // Materialize CSS imports [body]
    // put this at the end of the body
    // Import jQuery before materialize.js
    script(type='text/javascript', src='https://code.jquery.com/jquery-2.1.1.min.js')
    script(type='text/javascript', src='js/materialize.min.js')
